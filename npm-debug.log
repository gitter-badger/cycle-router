0 info it worked if it ends with ok
1 verbose cli [ '/home/tylor/iojs/bin/iojs',
1 verbose cli   '/home/tylor/iojs/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.13.3
3 info using node@v3.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/tylor/code/web/cycle-router',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/tylor/.npm/cycle-router/0.2.1/package.tgz not in flight; packing
9 verbose tar pack [ '/home/tylor/.npm/cycle-router/0.2.1/package.tgz',
9 verbose tar pack   '/home/tylor/code/web/cycle-router' ]
10 verbose tarball /home/tylor/.npm/cycle-router/0.2.1/package.tgz
11 verbose folder /home/tylor/code/web/cycle-router
12 info prepublish cycle-router@0.2.1
13 verbose addLocalTarball adding from inside cache /home/tylor/.npm/cycle-router/0.2.1/package.tgz
14 silly cache afterAdd cycle-router@0.2.1
15 verbose afterAdd /home/tylor/.npm/cycle-router/0.2.1/package/package.json not in flight; writing
16 verbose afterAdd /home/tylor/.npm/cycle-router/0.2.1/package/package.json written
17 silly publish { name: 'cycle-router',
17 silly publish   version: '0.2.1',
17 silly publish   description: 'Cycle.js Driver for reactive-router',
17 silly publish   main: 'lib/index.js',
17 silly publish   scripts:
17 silly publish    { build: 'mkdir -p lib/ && ./node_modules/.bin/babel src/index.js -o lib/index.js',
17 silly publish      test: 'npm run test' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/tylors/cycle-router.git' },
17 silly publish   keywords: [ 'cycle', 'cyclejs', 'reactive', 'router', 'driver' ],
17 silly publish   author: { name: 'Tylor Steinberger' },
17 silly publish   license: 'MIT',
17 silly publish   bugs: { url: 'https://github.com/tylors/cycle-router/issues' },
17 silly publish   homepage: 'https://github.com/tylors/cycle-router#readme',
17 silly publish   devDependencies: { babel: '^5.8.23' },
17 silly publish   dependencies: { addressbar: '^0.1.15' },
17 silly publish   peerDependencies: { '@cycle/core': '^3.1.0' },
17 silly publish   readme: '# Cycle-Router\n\nThis is a router driver for cycle.js built using the [addressbar](https://github.com/christianalfoni/addressbar) library. However if your browser does not support the history api it will switch to hashBang mode.\n\nI would also suggest read this [article](http://www.christianalfoni.com/articles/2015_08_20_What-if-the-adddressbar-worked-like-an-input) or watching this [video](https://www.youtube.com/watch?v=W5U-NryY0Ns). They are both by the author of addressbar and have some really awesome ideas about routing, and are what I\'m trying to make use of in this driver.\n\n\n# Installation\n`npm install cycle-router`\n\n# Example\n```javascript\nimport {run, Rx} from \'@cycle/core\';\nimport {h, makeDOMDriver} from \'@cycle/dom\';\nimport {makeRouterDriver} from \'cycle-router\';\n\nlet Routes = {\n  "authors": "/authors",\n  "books": "/books",\n  "books.view": "/books/view/:bookId",\n  "books.view.chapter": "/books/view/:bookId/chapter/:chapterNum"\n}\n\nlet Handlers = {\n  "authors": () => "Authors",\n  "books": () => "Books",\n  "books.view": ({bookId}) => `BookId: ${bookId}`,\n  "books.view.chapter": ({bookId, chapterNum}) => `BookId: ${bookId}, Chapter: ${chapterNum}`\n};\n\nfunction createView(text) {\n  return h(\'div\', [\n    h(\'ul\', [\n      h(\'li\',[h(\'a\', {href: "/authors"}, \'Authors\')]),\n      h(\'li\',[h(\'a\', {href: "/books"}, \'Books\')]),\n      h(\'li\',[h(\'a\', {href: "/books/view/33"}, "Book 33")]),\n      h(\'li\',[h(\'a\', {href: "/books/view/33/chapter/44"}, "Book 33 Chapter 44")])\n    ]),\n    h(\'h1\', text)\n  ]);\n}\n\nfunction HelloWorld() {\n  return "Hello, World!";\n}\n\nfunction main({DOM, Router}) {\n  Router\n    .addRoutes(Routes)\n    .addRoute(\'home\', \'/\')\n    .addHandlers(Handlers)\n    .addHandler(\'home\', HelloWorld);\n\n  let currentRoute$ = DOM.select(\'a\').events(\'click\')\n    .map(event => event.target.href)\n    .startWith(location.href)\n    .map(route => route);\n\n  let view$ = Rx.Observable.combineLatest(\n    Router.params$,\n    Router.handlers$,\n    (params, handler) => {\n      if (handler) {\n        return createView(handler(params));\n      }\n      return createView("Page can not be found");\n    }\n  );\n\n\n  return {\n    DOM: view$,\n    Router: currentRoute$\n  }\n}\n\nlet drivers = {\n  DOM: makeDOMDriver(\'.app\'),\n  Router: makeRouterDriver({\n    hashBang: false // Default Behavior\n  })\n}\n\nrun(main, drivers);\n```\n\n# API\n\n## Driver\n\n### ```makeRouterDriver()```\n\n###### Args\n  hashBang: true|false (default: false)\n\n###### Return\n\n(Function) The Router Driver function. It expects an Observable of the current route you would like to set as input, and outputs an instance of Router.\n\n## Router\n\n#### Methods\n\n####`addRoutes(routes)`\n  Adds multipls routes from object, where keys should be the name of route, and values should be the path to match against.\n  ```javascript\n  Router.addRoutes({\n    "authors": "/authors",\n    "books": "/books",\n    "books.view": "/books/view/:bookId",\n    ...\n  });\n  ```\n####`addRoute(name, path)`\n  Adds a single route.\n\n  ```javascript\n  Router.addRoute("books", "/books");\n  ```\n\n####`on(name, handlerFn)`\n  Listens for route change for route `name`.\n\n  The handler function will be passed an object with any parameters defined in the route.\n\n  ```javascript\n  Router.on(\'books.view\', ({bookId}) => {...});\n  ```\n\n####`setRoute(path)`\n  Sets the route to `path`.\n  Will trigger any subscriptions associated to the route.\n\n  ```javascript\n  Router.setRoute(\'/books\')\n  ```\n\n#### Properties\n\n#### `params$`\n  This is an observable which emits an object with any parameters defined on the current route\n\n  ```javascript\n  Router.params$.map((params) => {...});\n  ```\n#### `handlers$`\n  This is an observable which emits the register handler to the current route if present\n\n  ```javascript\n    Router.handler$((handlerFn) => handlerFn());\n  ```\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '35c901ceb44a171966f9e572a23fcb6cd3726fb1',
17 silly publish   _id: 'cycle-router@0.2.1',
17 silly publish   _shasum: '3669a88ca4f48277e02fe535d3d718f09a443e1c',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name cycle-router
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/cycle-router
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /home/tylor/.npm/cycle-router/0.2.1/package.tgz
25 verbose request uri https://registry.npmjs.org/cycle-router
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 19:30:25
28 verbose request using bearer token for auth
29 verbose request id dbc82546804f6adb
30 http request PUT https://registry.npmjs.org/cycle-router
31 http 403 https://registry.npmjs.org/cycle-router
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '128',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Tue, 01 Sep 2015 23:30:26 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-atl6222-ATL',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1441150225.342527,VS0,VE1523' }
33 verbose request invalidating /home/tylor/.npm/registry.npmjs.org/cycle-router on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.2.1. Try bumping the version to 1.0.0" : cycle-router
35 verbose stack     at CachingRegistryClient.<anonymous> (/home/tylor/iojs/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
35 verbose stack     at Request._callback (/home/tylor/iojs/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
35 verbose stack     at Request.self.callback (/home/tylor/iojs/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/home/tylor/iojs/lib/node_modules/npm/node_modules/request/request.js:1057:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/home/tylor/iojs/lib/node_modules/npm/node_modules/request/request.js:1003:12)
35 verbose stack     at emitNone (events.js:72:20)
36 verbose statusCode 403
37 verbose pkgid cycle-router
38 verbose cwd /home/tylor/code/web/cycle-router
39 error Linux 4.0.5-2-hgb.hotplug
40 error argv "/home/tylor/iojs/bin/iojs" "/home/tylor/iojs/bin/npm" "publish"
41 error node v3.0.0
42 error npm  v2.13.3
43 error code E403
44 error "You cannot publish over the previously published version 0.2.1. Try bumping the version to 1.0.0" : cycle-router
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
